<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAApGAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAlw
        SFlzAAALEwAACxMBAJqcGAAAALRlWElmSUkqAAgAAAAGABIBAwABAAAAAQAAABoBBQABAAAAVgAAABsB
        BQABAAAAXgAAACgBAwABAAAAAgAAABMCAwABAAAAAQAAAGmHBAABAAAAZgAAAAAAAABIAAAAAQAAAEgA
        AAABAAAABgAAkAcABAAAADAyMTABkQcABAAAAAECAwAAoAcABAAAADAxMDABoAMAAQAAAP//AAACoAQA
        AQAAAAABAAADoAQAAQAAAAABAAAAAAAAA+Ft7gAAFxtJREFUeJzt3WlsHOd5B/DnnWNvnpJIHZQjS5QU
        W5EVx/JR35Ydp+gBJAHaAnWDfmj7IfCHFu2XHkAPIECLpkBTuF/qBi2KBgngFE1Tw0WdpEdsN3adOHbt
        RLZ8yIouUhdFcrn3zLzF88zscklxxR1yj1nN/xdstKR3Z4e7+z7zns9LBAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALB5imJOa93vU4A+
        UireRcDo9wkAQP8gAADEGAIAQIwhAADEGAIAQIwhAADEGAIAQIwhAADEGAIAQIwhAADEGAIAQIwhAADE
        GAIAQIwhAADEGAIAQIwhAADEGAIAQIwhAADEGAIAQIwhAADEGAIAQIwhAADEGAIAQIwhAADEGAIAQIwh
        AADEGAIAQIwhAADEGAIAQIwhAADEGAIAQIxZ/T6BQaNJK89zzVBPivcW9D1lKNNReMPbFvt3Smvd71OA
        PlIq3kUANYAQV35FSs8unh1/9o2v/YZtJkxNEj1af4M0kZlUOjVua+35gYYfjJDTcdpQyqh51cpju3/h
        6Yn0rqX659XvE4s6BIA2ae0ppUx95uqHk3/x/O/9WTYxRK721n0eF/jcrgRltydIu/g+dothGFSo5enQ
        +J3PSADQHikVrqUWRwgAIdmG7YxnJ8qZRM7y/Mv6unVIfVmTnUQQ6CJtKEMljFTBUvb6URkaEABC4qql
        6zkW39oNADzWsnC2SK7nUHZHgrSj0fvSWVqToVztWBoNrFAwDNgjylS0dL5KhZkqKUuhIwAiAQGghxAE
        IGoQAHoMQQCiBAGgDxAEICoQAPoEQQCiAKMAEQgCrOejA+2NX6wdmDCCccNAALhRgoAOyrSxPNuwPk9p
        9WxX/plrHTKPUQfzGZvLdf1O8ES14ndEXg3VlRsFAsANEAS4AJu2ksLvlDV5rpZjmil/WYxb9Qs53zcS
        ii6+XqC5EyV5jnb95zeqBKqp7Dfu+8f2HE3Z7Tbtum9Y7qMmMPgQAAY9CGgiK6Eof75Kl98qUulSjdya
        lsKdHLNodG+KRqdTZCYUuRW/mjA0laRzL+WlEHPBXuuYreRPV2RG49iBNDllb+3nw8BAABjgIMBVfL7K
        XzleolPfnpfHG9yhqIiqmqh4yaGr75YoM5mg3Q8Ny5oEt+xRdodNO+7JSRAwk6rRVGh5Xk13vBrRue/l
        KTeVIMPmX6BPYJAhfg/q6EBQ7S9fduj0fy1INd1KG/IcPgYHAiupyEoZVLpYo/f/ZY6KF2pkJg1ySh5t
        uy1L6S2WNA/qx2t10/WbR1Loy1dqNPvqktQqsJp6sCEADHIQUERnX1qUQmxYQaff6oLLtYSkko67s99d
        JF6+wDcODDvuzkkfQJgLuH88gy69WaD8maoEGQSBwYUAMIBBwK/6GzT3TokWPij7hfA61fh6EMifrdDF
        NwpkZ0xySq6040f2JMmp6mtGCq57bnw6HtG5FxfJ5X4ENAEGFgLAoAUBTWSYRLUll86/kpcqeTtXYL/6
        btCFHxapdMXxj0dEO+4ekuZCmKu4jDoEHY8Xf1iQYMQ1CT43dAoOFnxcAxYEuPAZCYNmv79ElauO3+nX
        ZuHlZkJ10aErbxelGu9WPOnM23JrWu6HKbwcUKykQbM/WKLC+SrZOUOGGLl/AQYHAsAgBQEuaBmDls5V
        6dJbfiFuIylRAz+Wnz+6L0W6xlV3v29g+9Ec2UMmeU7I8+JBgKqWTkg+v598e54WPqxIIMDU5sGAADBA
        QYCr3FzQZl/NS8EN1W43SK7yWw9nKLcjIXMF+NPnuQDJUYsmb8+RVwtZC5DaiD8S8fZXLlFhpkbjH037
        MwXRLzAQEAAGBU/4SRt0/n/zdPl4iaxUiHY7X6kdkoI+cXuO3OpyQW8EhtsylJlI+MOCoYYF/GNwU2T3
        IyP+0CBaAQMDAWBQSEHVdPXdsszAqxU46WWIqnpN0+QdOUqsUdWvt+e335VrTBlulz/92KOxg2kavikp
        U5ExKjA4EAAGQH2u/8LJMlUXXLlfLXhUK64fBPi/81WdZ/9tObR2Z58U4opHY/tT/rBgpf1C7LlEdtaU
        OQWyBgGFf6AgAESdDPspqi66Mu7PfQFS7VYktYB2ggA/nof7ZPHPOs2GMMOCskCo6tHk0Sylxm20/QcQ
        AkDUcXnnnLe2opF9Kb/NXi9o6wQB/h1fzbnXf2Tv9a/s9ZpCbmdQU1hnctDy4xM0cSQbehgRogEf2aDU
        AixFE0cyNPXQMGUmbRl+47Y7F7pWQUCaDkklC3+k1tDmy22/I7fcyVhfFsxrjJpu9Z933ht+IhFEBwLA
        gOACxp2AqVGLdt0/TJNH/ULK03ilJlBcGQT83n1N2w5nZDVgO737XJAriy6d+e8F6djjNj1X6+VW1XKM
        +o0ft+VQhoZD9hlAtGA58CCR4Tz/Uju6NynJOTixx+KpihRSrgnwY3iyDy/bTY6a0vPP7fR1q+fcXCh7
        NPPyElUWXKnay/RemYPAAcVPCiL/morsrD9q0HI+Qj1DEQJDpCEADJqgQPGVn8fcJ27P0vBHktJByDMF
        K/NuI4MPF1CeouuUWiT+uKaZQTT18LBfpectzJqaAH7VXzXqjH4HoN8MWVGzCJ5Wz1DUWG4MkYQmQFTo
        Nm6rV+RpvxDyBJ+dPzVEO+8bpvSETYULNfl36+EsuTwu3+anLFd3Pm59/8J6wQ6WFXPtg1+Pbzzev6Ld
        HzyG1yvwUuOlmSqdf3mpM+8NdA1qABEhiTy4oOqVV9KGptLmJ/OsP5EkExD/yE2CzIRFC6cqlBqzqDhT
        pfQ22y/QnaiKNx1jxUU/SBRiWkpSkl14vSCZiGpLnjQVth3JtFcLgZ5DAIgAvuryyj5eSScLaRpJOevt
        7qb7irP9+B12jZgQlMb6ODwP+3EH3uLpivzbrZTjcsU3iayMQZU5Rwr+3NtF+Tt4iTD3Rcy8kpeOQr6P
        KcLRgwAQEVyQrr5Xlitofa1+PR13PRjUCzC3/XfdPyRrA6SjrillN+MqujzP7s6+A/XpwlzV5xmEs6/k
        pfDX8q6sUJTzCoJDNe9KzgBeJ8CBAbWAaMHHEQFcoBLDFu1+ZFjW53OV3b/qL/93/p1U9V0tHX28JkBm
        Ba6lqe3e8R2IgmQgXOWfe6dIJ565TGc5M1BVS01AmiTeyvRhl39UpOJsVZ6HZcLRggAQEVywuQovV8m1
        ynVTnn7OBMxDf6XLQWafdQpVJ4MAN1F42S8nGf3w3+apfMXxk5E2Ffy1ZgzOvLrkB4eNvzR0AQJAFPAQ
        nM05+6pSoNrJ8sNtex76a9dmg4Cs/beUZAPmq/7iTyoyy1BSkl0vHyEvY04qmv+gTHl+DjIJRwoCQBQE
        y3U5wSdX/XWbAYMLM2cHkvz8ustBIGhO8HlyU6QxVbjdY2ii2dcKqAJEDAJAvzUV5vLV9qr0zdVrngkY
        ZpuujQYBP/2XRxOfyFKqvp+ACplE9HRFagJIJR4dCAD9Fky8mT9ZCddBz+WP5+7POVIdb7cWsOEgoJbX
        /sv04o2kA1dEF14rhE5nBt2DANBPQbW6POfKbjsbaZvL8OGJkiz8CTPEtpEgUE8ftuWWNGV3JtddMrxW
        UhN+TU4cir6AaEAA6DMuVDz2Lzv0hL0q8jCbrWRa7pXjxdABZCNBQDoDbUU77vKXGIfFf+OlN4vIHhQR
        CAB9xj3ovFFH6CGyYGUgL8nd86lRf1IO5+QP+YmGDQL1JCOcYGS9JCOtggevEyhdCrenAXQHAkAE2v+S
        pVeFHzXI7kzQyN6UjMNzOu6NFqgN9QnU04yFrMpLZ6Kj/Q7PdkY8oKsQAPpM5ve3mtHXSjAmv/VQujFL
        UNYBbOY8QgSB5USjCamBhE4HhlIfGQgAEegE5Cw/7fYB1FN8j06nKDlmLc/v70B7OmwQ4I1EOCEoT2OW
        VOOq/c7A9BZepYgcov2GABCBJgC3pc20sX4hCobiEsMmje1Phxr/78bW5LLZyLBF249m/V2F1ktRbpL0
        U4wdSFF6GwcNZBHuNwSAPtNBgZ64PUPa85MA1JNurr7Vk3Vwe5/XA3RreW27QaAxLHgoI80BXoXoL1le
        dQt+x/kBuM9i6qGRrixPhvCwHLjfgg02h3YnJWnGxdcLy+3p5oIXdJ5xrj5+rBS2LhagehBYbynxcubh
        IXrvn69IULomXmgODIom78hKQlO+37EkJbApCAARCgK8Mw9r5ARoKkn1qz9vwdWrgsPnsF4QkL6AipZt
        wTgtGS9mUvyt0iuDxPjBtFT9ufMQhT86EACiIujc4yDAHXwtHkKe5/f4y9V/o73p7RQ+RbJ6LzeVXA4C
        2/1cBc0aGcxcLQHgesfj/ISd6rCEzkAAiGAQkHn9LQo4bxN2zacWMhDUU4uvKdjym9v/vD5h+GYORkoS
        jXKzILfDXu57UNcmKW3+ufnvCr3rMPQEAkCEyBVeE105XvI7ziz+nbo2NXfTz5IrcK2r6hoJPCWVl0mU
        HrdbF0ZJ7KElPRmn8zr34mLjP/Hz02OWpBr3hzBX7Rew+l9T+VmADKKx6ZQMF6L6Hy0IABFSXzbLMwOv
        /LgknWvXXN03UXhkG/CMoo88Nrrm6sHmZbvFCzV5TPFibcVj+PeJjEFWtkWSTzmmXlGjSW+1aevHMrLH
        IQp/tCAAREnQ0bfl1owUNIe3+jJXVq03Q3L02X76rjVfPiiwcyfKfk2DmxwcKFaeIrmOJpOTgmR5d5AW
        Bwoe7Bpa9jPkZcS88xAWAEUL5gFEjJ9IU9HYgWCiTzsbhoS5tXxhv7DzUl1OUd7oyV91qwej6pIn4/ry
        VL3qxr/WvNWYll2LRvemUPgjCgEgaoKrMBccni3HV9teVJtlll7Ro6vvldpbm7DO1uSy8s8Mlg1DZCEA
        RBGXeYNo/JZM58p+894Bau3sQtzx5xT8Zke7WYLWCgL1nYnHb0nJMGKYxCHQWwgAUVRf7jtpyz4BnZv1
        p4Oyv6pdbxKVObXYh+VQqcVaBQE/dZhB248OyeShXhZ+f5M0aBcCQEiaNHeLuz15Lc3z/jP+mvtOzftv
        2jSk/i9X+XmfAUkrtpHC2hwETCXrA7YdyVJq3CI32K6sF5QyXFNZK4ct4LoQANonRcZU1pJhGJWuv5ps
        +kmUHDNlAc2GknCutmovwcavPaLcroSf438Tsws5AFTmHam5THw84yc66cE3jOdK1LwqjSW3VXbnpuWz
        UdiDrC14l9qkgrdqz5bp4lhmW6Hm1hpDZV18UX/t//4U2TlTqtabvpryxKFVr8HV9OyELZt41jcY3dCh
        DX8vwNHptJyv7FvYG/7sA60XDGW0v1sKIAC0TcmXTFlmomBbibPaHwDvfoOTJ+9wyq+DKX/PwE0erlXM
        4iSd/Bq8v9+GmhvBdF9erWgkVehU5ZuilHa1Q+OpidO2keStS5o3WofrQABoE183Pe0ZGTtLN43v/aDq
        VLlW0P0Nr4NawBAPC27tUBKNNaYN89Xaypqy2nCja/UNQ9H4rRkZ/suf6+CGpOtQpLTj1WgivetEwkxy
        TYAnInf3RW8QCAAhaO0prvYfmDz0ktOLJkDjhf0xdR4WrP/cznNCTQQKAs3InqTs/NMyCLRIVsIdiMM3
        B0EqWNDU0V2Jr3vqSnmeR9Ojh//H/9O7H5dvFAgAISil5Jt1580PvmCZlqe1Nnvzwn7hzGy3/WQga7XT
        VywYChbq1G+WWnFbL9kob/yx+rgyC5CTffAW5Y6Wmkh9n0B/vr8lmYEaNZRubE3e4qw1eaZpWNVD40cl
        ACjyPydYH9YChKCUVPnVx3fffXxqfM8bFxdmbretBAcCo1frBLbdlpFRgUYnd9MEH7lb/7/l6fgrVwZe
        b5ZfU7pxnn+QP1OlXfcNSdNAgo7WfhBo1Cj8ws4r/zitmWH5TYnVr9dOZqGNvy2GV3FLxs0jt37vwOiR
        U9z+Dz4naAMCQAjcrnQ910zbWefefY9+7auv/M0nxuy062qnNzUpLjuSUde6/sX02pxcK+6uN9THy4F5
        /gFnJrKHTEoM+ct411x23NSJuLrw9yIIGMqgslNUd00e+2rSTBN/FqayEADaFPueElmiGoKnPWUoQ5+e
        +2Dic19+7B2tvdFrr7NdFrYqHfbMgoVBvOdgZtJeXse/ydfgY/AoQQeDgNTIiGj2rx589pap3L5Fjzwy
        yGj7HVIxn6OMPoCQuPB72rNuGt938YEDjz+9VM4r07B6N+J9nY64lrcNHJ/b8rLrUMb0sxV34DU63SfA
        V/p8dV49PPXpL03l9i142jXDFH5ADSB0DaBeC2Bn5k6OPfG3x95SpCa5eRCMP0MPagLc0edpVyXM1Mkv
        PfivRybTu0v8aSoVLgAo1ABgI7UAHhK8aXzflV9/4Ld/Z744Z5gG2p3t6kRNwFCml6/Nq1/c/+Rvbs/c
        VPCIgzKu/mEhAGxi4YmnPfNX7nnya/ftP/YPC6WrlmVYvLcPdDkImMqu5WtXrft3/uxTn9n7a8+52jVN
        Zfa2GXaDiHf9Z4NNgFUdgmpm4Uz6V//u8e8uFufvSCcyjuu5GF3pUnPAVJZTcpassdTEC089+Nwnh5Pj
        Lo9bqA22/RWaALDJDkHaMbK78NQvP/PzQ+mR90vVomWiJtCVmgAv9S27BSuXGH3zD+/68mdGkluq0hZD
        x9+GIQBskqEM7owyDk4envnrJ77+yeH0yI+XyouWZdocBPDF7EwQ0JZhOwVn0c7aw9//wj3/+NPTIx+b
        4/edg3BfTvoGgQDQAdwh5XqOeXDy8Kmnnvj6I3u2TX/rauGSZRomNxHQNt1EEOD3z1Smmq9ctqaye7/x
        hXu+8ti+kUMzPOGH3/d+n/egi3cDaJN9AKv5VyTTy1cW1Bf//Xf/+Lk3n/l920hYmUTW87ixoD0OuLF/
        z9voE9BDO1MeuUqVnCXD0U7p2NRn/+jzh//kizl7pPE+d+L1VMz7AOL913c4ADR1DMqh/+Ptb9759At/
        /qcnZn70aMrOEN+UIocfE6wfiP3730TzYivpV3G0ZW6tUWJS0/TI4Wd/af+Tf/DAzp97iysEHEY7We1X
        CADx1ukAIMfk/2nPNJTpFqp5+s7xb/7MP7329791/Pwbj3LBT1ppSpgJMgxetKJkdn4XTiPygsLHwVBp
        8oyqU6FKrczNAefWHUe+9bmHP/+Xx/Z++juWsjmwmkopt9Pr/BUCQLx1s+QFVVVZN8cJK14++Z+HX3z3
        +c/+4NRLj88unLutXCvlXM8lU5kcDDq2A9CgfPEc7cj7b5k2Jczk4s4tU/93x+77nn/gwKe+ce/0seMm
        2fxQw9Ou9LN05TxUvItAvP/6LgcAOT6np/B4vbp8geXFyrUifXjl3V0nL52Ynl04u//y0oVdZ6+eGrIM
        eygO04l5qYFW3uL+iUP5tJ09u2/io+9NZHe+v3fy4Ayv6AtwwVdci+rquah4F4F4//U9CACrmgWG1mSY
        hnypY3S9b5vi5dZKEfcFcPOo+y+o4l0E4v3X9zAAXBsMNC8o4PEuyd4Rxy+i/95LrlXpAFRK6V7n8lMx
        fN+bxfuv71MAgOhQMQ8AN3x7EwBaQwAAiDEEAIAYQwAAiDEEAIAYQwAAiDEEAIAYQwAAiDEEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAoM34fyg1omAk42fHAAAAAElFTkSuQmCC
</value>
  </data>
</root>